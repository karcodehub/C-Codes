#include <stdio.h>
#include <conio.h>
#include <math.h>
main()
{
    //cor arry store corelation betw orginal signal arry and shift_signal arry when shift is applied 
    int signal[10][10], shift_signal[11][11],temp_shift[11][11], cor[11], shift[11];

    //define signal and shit_signal
    int loop1=0,loop2=0,no_row=0,no_shift=0,s=0,k=0,temp=0, rows=0,cols=0;
    getch();
    printf("Enter value for signal in x rows\n");
    scanf("%d",&no_row);
    
    for(rows=0;rows<no_row;rows++)
    {   for(cols=0;cols<2;cols++)
            {
                scanf("%d",&signal[i][j]);
             }
    }

    printf("Enter value for shift_signal\n");
    for(rows=0;rows<no_row;rows++)
    {   for(cols=0;cols<2;cols++)
            {
                scanf("%d",&shift_signal[i][j]);

             }
    }

     printf("Enter value for number of shift\n");
    for(rows=0;rows<no_shift;rows++)
    {
        scanf("%d",&shift[i]);
    }                                                                                                                                                                      for(i=0;i<n;i++)
    
    printf("the signal is :");
    
    for(rows=0;rows<n;rows++)
    {   for(cols=0;cols<2;cols++)
            {
     
         printf(" [%d]",signal[i][j]);
         //printf("[%d]",shift_signal[i][j]);
     }    
     }
    printf("the shift signal is :");
    for(rows=0;rows<no_row;rows++)
    {   for(cols=0;cols<2;cols++)
            {
     
         //printf(" [%d]",signal[i][j]);
         printf("[%d]",shift_signal[i][j]);
     }    
     }
     
     
for (i=0;i<n;i++)
{   
    s=shift[i];//Selecting the time shift for shift_signal
    for(j=0;j<x;j++) //to access for shift_signal arry
    {
       temp_shift[j][0]=(shift_signal[j][0]+s); // h[m − n] accessing only x axis value where as y axis is constant
       
     }
	for(k=0;k<x;k++)
	{
	  temp=temp_shift[k][0];
	  for(j=0;j<x;j++)
		{ 	
		
	         if (temp==signal[j][0])
                  {
                	cor[i]+=temp_shift[k][k]*signal[j][1]; //s[m] · h[m − n] accessing only y axis value to multiply
            	  }
		}
}
     print("The corelation signal is %d",cor[j]);
}
  
    
      
